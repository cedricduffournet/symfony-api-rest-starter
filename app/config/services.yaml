parameters:
    locale: 'fr'

# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
#imports:
#    - { resource: "../src/Dakodapp/Resources/config/services.yml" }

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Controller\OAuthTokenController:
        public: true
        arguments:
            $server: '@fos_oauth_server.server'
            $clientId: '%env(AUTH_CLIENT_ID)%'
            $clientSecret: '%env(AUTH_CLIENT_SECRET)%'

    App\Controller\PublicController:
        public: true
        arguments:
            $mailer: '@fos_user.mailer'
            $retryTtl: '%fos_user.resetting.retry_ttl%'


    #App\DataFixtures\ORM\:
    #    resource: '../src/Dakodapp/DataFixtures/ORM/'
    #    tags: [doctrine.fixture.orm]

    #App\DataFixtures\:
    #    resource: '../src/Dakodapp/DataFixtures'
    #    autowire: true
    #    autoconfigure: true

    #App\Entity:
    #    resource: '../src/Dakodapp/Entity/*'
    #    autowire: true      # Automatically injects dependencies in your services.
    #    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.



    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

